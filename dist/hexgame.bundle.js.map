{"version":3,"sources":["webpack://hexgame/webpack/universalModuleDefinition","webpack://hexgame/./src/core/client.js","webpack://hexgame/./src/entities/entity.js","webpack://hexgame/./src/entities/shapes/hexagon.js","webpack://hexgame/./src/entities/shapes/polygon.js","webpack://hexgame/./src/entities/shapes/square.js","webpack://hexgame/./src/entities/shapes/triangle.js","webpack://hexgame/./src/entities/text/debug.js","webpack://hexgame/./src/utils/Vector.js","webpack://hexgame/./src/utils/utils.canvas.js","webpack://hexgame/webpack/bootstrap","webpack://hexgame/webpack/runtime/define property getters","webpack://hexgame/webpack/runtime/hasOwnProperty shorthand","webpack://hexgame/webpack/runtime/make namespace object"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;ACT0D;AAClB;AACY;AACE;AACJ;AACJ;;;AAG/B;;AAEf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sEAAc;AAChC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,yBAAyB,gEAAO,KAAK,qDAAM;AAC3C,yBAAyB,iEAAQ,KAAK,qDAAM;AAC5C,yBAAyB,+DAAM,KAAK,qDAAM;AAC1C,yBAAyB,4DAAK,KAAK,qDAAM;AACzC,yBAAyB,4DAAK,KAAK,qDAAM;;AAEzC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,C;;;;;;;;;;;;;;;ACnBgC;;AAEhC;AACA;AACA;AACe,sBAAsB,6CAAO;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACzBwC;AACT;;AAE/B;AACA;AACA;AACe,sBAAsB,4CAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,kDAAM;AACrC,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,C;;;;;;;;;;;;;;;AC5BgC;;AAEhC;AACA;AACA;AACe,qBAAqB,6CAAO;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzBgC;;AAEhC;AACA;AACA;AACe,uBAAuB,6CAAO;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACzB+B;;AAEhB,oBAAoB,4CAAM;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,WAAW,IAAI,WAAW;AAC5C;;AAEA,C;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO,IAAI,OAAO;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,C;;;;;;;;;;;;;;;;ACpFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E","file":"hexgame.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hexgame\"] = factory();\n\telse\n\t\troot[\"hexgame\"] = factory();\n})(self, function() {\nreturn ","\r\nimport { generateCanvas } from '../utils/utils.canvas.js';\r\nimport Vector from '../utils/Vector.js';\r\nimport Hexagon from '../entities/shapes/hexagon.js';\r\nimport Triangle from '../entities/shapes/triangle.js';\r\nimport Square from '../entities/shapes/square.js';\r\nimport Debug from '../entities/text/debug.js';\r\n\r\n\r\nexport default class Client {\r\n\r\n\tconstructor(x, y, fps, container) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y\r\n\t\tthis.cwidth = 800\r\n\t\tthis.cheight = 600;\r\n\r\n\t\tthis.fps = fps;\r\n\t\tthis.frameCount = 0;\r\n\t\tthis.lastFPSUpdate = 0\r\n\t\tthis.framesThisSecond = 0\r\n\r\n\t\tthis.viewport = generateCanvas(this.cwidth, this.cheight);\r\n\t\tthis.context = this.viewport.getContext('2d');\r\n\r\n\t\tcontainer.insertBefore(this.viewport, container.firstChild);\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\r\n\t\tthis.tick = 1000 / this.fps;\r\n\t\tthis.nextGameTick = new Date().getTime();\r\n\r\n\t\tthis.entities = [];\r\n\t\tthis.entities[0] = new Hexagon(new Vector(100, 100), 100, 0);\r\n\t\tthis.entities[1] = new Triangle(new Vector(250, 250), 50, 15);\r\n\t\tthis.entities[2] = new Square(new Vector(350, 100), 75, 25);\r\n\t\tthis.entities[3] = new Debug(new Vector(10,30), 'FPS', 'curFPS');\r\n\t\tthis.entities[4] = new Debug(new Vector(10,50), 'Frames', 'frameCount');\r\n\r\n\t\tthis.loop();\r\n\t}\r\n\r\n\tloop() {\r\n\r\n\t\tthis.frameid = window.requestAnimationFrame(this.loop.bind(this));\r\n\r\n\t\tlet t1 = new Date().getTime()\r\n\r\n\t\tif (t1 > this.nextGameTick) {\r\n\t\t\tthis.nextGameTick += this.tick;\r\n\t\t\tthis.frameCount++\r\n\t\t\tthis.update(t1);\r\n\t\t\tthis.draw();\r\n\t\t}\r\n\r\n\t\tif (this.gameState == 'paused') {\r\n\t\t\tcancelAnimationFrame(this.frameid);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate(timestamp) {\r\n\r\n\t\t// Measure how many frames were rendering each loop \r\n\t\tif (timestamp > this.lastFPSUpdate + 1000) {\r\n\t\t\tthis.curFPS = this.framesThisSecond;\r\n\t\t\tthis.lastFPSUpdate = timestamp;\r\n\t\t\tthis.framesThisSecond = 0;\r\n\t\t} else {\r\n\t\t\tthis.framesThisSecond++;\r\n\t\t}\r\n\r\n\t\tfor(let entity of this.entities) {\r\n\t\t\tentity.update(this);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdraw() {\r\n\r\n\t\tthis.context.clearRect(0, 0, this.cwidth, this.cheight)\r\n\r\n\t\tfor(let entity of this.entities) {\r\n\t\t\tentity.draw(this.context);\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Abstract Class Entity\r\n */\r\nexport default class Entity {\r\n    constructor(position) {\r\n        if (this.constructor == 'Entity') {\r\n            throw new Error(\"Abstract classes can't be instantiated.\")\r\n        }\r\n        this.position = position;\r\n    }\r\n\r\n    update(state) {\r\n        // Do Nothing\r\n    }\r\n\r\n    draw(ctx) {\r\n        // Do Nothing\r\n    }\r\n\r\n}","import Polygon from \"./polygon\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class Hexagon extends Polygon {\r\n\r\n    constructor(position, radius, degrees = 0) {\r\n        super(position, radius, degrees)\r\n        this.sides = 6;\r\n    }\r\n\r\n    update(state) {\r\n        this.θ = (this.θ - (Math.PI / 120)) % (2 * Math.PI);\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n        for (let vertex of this.getVertices(this.sides)) {\r\n            ctx.lineTo(vertex.x, vertex.y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\n","import Vector from \"../../utils/Vector\";\r\nimport Entity from \"../entity\";\r\n\r\n/**\r\n * Abstract Class Polygon\r\n */\r\nexport default class Polygon extends Entity {\r\n    constructor(position, radius, degrees) {\r\n        super(position)\r\n        if (this.constructor == 'Polygon') {\r\n            throw new Error(\"Abstract classes can't be instantiated.\")\r\n        }\r\n        this.r = radius;\r\n        this.θ = degrees * (Math.PI / 180);\r\n    }\r\n\r\n    getVertices(sides) {\r\n        const vectors = [];\r\n        const initVector = new Vector(this.r, 0);\r\n        for (var i = 0; i < sides; i++) {\r\n            let vertex = this.position.add(\r\n                initVector.rotate(i * (2 * Math.PI / sides) + this.θ)\r\n            );\r\n            vectors.push(vertex);\r\n        }\r\n        return vectors;\r\n    }\r\n\r\n}","import Polygon from \"./polygon\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class Square extends Polygon {\r\n\r\n    constructor(position, radius, degrees = 0) {\r\n        super(position, radius, degrees)\r\n        this.sides = 4;\r\n    }\r\n\r\n    update(state) {\r\n        this.θ = (this.θ - (Math.PI / 60)) % (2 * Math.PI);\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n        for (let vertex of this.getVertices(this.sides)) {\r\n            ctx.lineTo(vertex.x, vertex.y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\n","import Polygon from \"./polygon\";\r\n\r\n/**\r\n * \r\n */\r\nexport default class Triangle extends Polygon {\r\n\r\n    constructor(position, radius, degrees = 0) {\r\n        super(position, radius, degrees)\r\n        this.sides = 3;\r\n    }\r\n\r\n    update(state) {\r\n        this.θ = (this.θ + (Math.PI / 30)) % (2 * Math.PI);\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n        for (let vertex of this.getVertices(this.sides)) {\r\n            ctx.lineTo(vertex.x, vertex.y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\n","import Entity from \"../entity\";\r\n\r\nexport default class Debug extends Entity {\r\n    constructor(position, label, field) {\r\n        super(position)\r\n        this.field = field;\r\n        this.label = label;\r\n        this.value = '';\r\n    }\r\n\r\n    update(state) {\r\n        this.value = state[this.field];\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.font = '25px Arial';\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText(this.toString(), this.position.x, this.position.y);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.label}: ${this.value}`;\r\n    }\r\n\r\n}","/**\r\n * 2D Vector Library\r\n */\r\nexport default class Vector {\r\n\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(v) {\r\n        return new Vector(\r\n            this.x + v.x,\r\n            this.y + v.y\r\n        )\r\n    }\r\n\r\n    subtract(v) {\r\n        return new Vector(\r\n            this.x - v.x,\r\n            this.y - v.y\r\n        );\r\n    }\r\n\r\n    scale(scalar) {\r\n        return new Vector(\r\n            this.x * scalar,\r\n            this.y * scalar\r\n        );\r\n    }\r\n\r\n    dot(v) {\r\n        return (this.x * v.x) + (this.y * v.y);\r\n    }\r\n\r\n    cross(v) {\r\n        return new Vector(\r\n            this.y * v.x - this.x * v.y,\r\n            this.x * v.y - this.y * v.x\r\n        )\r\n    }\r\n\r\n    unit() {\r\n        return this.scale(Math.inv(this.magnitude()))\r\n    }\r\n\r\n    magnitude() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n\r\n    max() {\r\n        return Math.max(this.x, this.y);\r\n    }\r\n\r\n    min() {\r\n        return Math.min(this.x, this.y);\r\n    }\r\n\r\n    rotate(theta) {\r\n        return new Vector(\r\n            this.x * Math.cos(theta) - this.y * Math.sin(theta),\r\n            this.x * Math.sin(theta) + this.y * Math.cos(theta)\r\n        )\r\n    }\r\n\r\n    equals(v) {\r\n        return this.x == v.x && this.y == v.y;\r\n    }\r\n\r\n    toString() {\r\n        return `[${this.x}, ${this.y}]`;\r\n    }\r\n\r\n    toArray() {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    clone() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    get length() {\r\n        return Math.sqrt(this.dot(this));\r\n    }\r\n\r\n}","\r\nconst getPixelRatio = function (context) {\r\n    console.log('Determining pixel ratio.');\r\n\r\n    var backingStores = [\r\n        'webkitBackingStorePixelRatio',\r\n        'mozBackingStorePixelRatio',\r\n        'msBackingStorePixelRatio',\r\n        'oBackingStorePixelRatio',\r\n        'backingStorePixelRatio'\r\n    ];\r\n\r\n    var deviceRatio = window.devicePixelRatio;\r\n\r\n    // Iterate through our backing store props and determine the proper backing ratio.\r\n    var backingRatio = backingStores.reduce(function (prev, curr) {\r\n        return (context.hasOwnProperty(curr) ? context[curr] : 1);\r\n    });\r\n\r\n    // Return the proper pixel ratio by dividing the device ratio by the backing ratio\r\n    return deviceRatio / backingRatio;\r\n}\r\n\r\nconst generateCanvas = function (w, h) {\r\n    console.log('Generating canvas.');\r\n\r\n    var canvas = document.createElement('canvas'),\r\n        context = canvas.getContext('2d');\r\n    // Pass our canvas' context to our getPixelRatio method\r\n    var ratio = getPixelRatio(context);\r\n\r\n    // Set the canvas' width then downscale via CSS\r\n    canvas.width = Math.round(w * ratio);\r\n    canvas.height = Math.round(h * ratio);\r\n    canvas.style.width = w + 'px';\r\n    canvas.style.height = h + 'px';\r\n\r\n    // Scale the context so we get accurate pixel density\r\n    context.setTransform(ratio, 0, 0, ratio, 0, 0);\r\n\r\n    return canvas;\r\n}\r\n\r\nexport { getPixelRatio, generateCanvas }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}